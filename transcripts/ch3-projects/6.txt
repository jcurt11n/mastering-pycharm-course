00:01 The next thing that we are going to talk about
00:03 is searching and navigating within a project.
00:05 These little simple applications, even the Jumpstart one,
00:08 really are a little too simplistic for that,
00:10 so what I want to do is grab a more complicated application for us to work with.
00:16 So over here at the MongoDB quick start course
00:18 I wrote a little AirBnB knock off type thing
00:21 so let's go and clone this as well, we'll go over here,
00:26 go back and this will be quick review of opening an existing project,
00:29 so we're going to come down here and say git clone that,
00:33 and I'll just call it into Mongo, okay go here
00:39 and then we'll create a virtual environment, and then we'll go open it.
00:44 This is actually the same one that you already saw, but that's ok.
00:48 Let's go over here to this, this is the one that was already in my reaching files
00:53 but I want to make sure you can get started as well
00:55 so yeah, we'll add that root, that's fine.
00:58 We're actually not going to check anything back in, but that's ok.
01:01 So over here you can see here is our program,
01:03 here is our source root and so on,
01:06 so what we really need to do to get started
01:08 if I open up this for example everything is broken,
01:12 so we're going to go over here
01:13 and we going to say mark directory as sources root
01:16 now that all fixes that,
01:19 this actually depends upon MongoEngine and tqdm
01:23 how does it know— this is pretty awesome, this is part of the project stuff,
01:26 so look over in this requirements file,
01:29 most major projects have at their root a requirements file,
01:33 it says these are the modules that I depend upon
01:36 and PyCharm knows that and it says,
01:39 well look, these packages from PyPi— they're not here;
01:43 how does it know— well, we have our virtual environment
01:49 which I guess I created in the wrong place,
01:52 it didn't exist so where did I create it—
01:55 so I did it in the main root, not the one down here, so let's go and add that.
01:59 So we come over here to preferences,
02:02 on Mac you always say Command + comma
02:05 pretty much any app and it will take you there,
02:08 we can just come down here to project, way down here,
02:12 go to projects interpreter, and see it's using the main one
02:16 so we'll go over here and say add local
02:19 and this is going to be in users screencaster desktop mongo in there,
02:29 the exact path varies by Windows or Mac,
02:32 I believe it's in scripts not bin on Windows
02:35 but over here you can see it says which things are here
02:38 and if we switch that back, it'll say guess what— give it a second index,
02:44 yeah, now there's even fewer things installed
02:47 all of those requirements are missing because this is totally empty.
02:51 Why we're here— notice over here this UI
02:54 actually would let us do things like install,
02:57 I can come over and say MongoEngine,
02:59 and it'll actually find all the stuff to do with MongoEngine
03:02 and let me install that package right there.
03:05 We're not really going to run this app
03:07 because we don't have Mongo set up correctly for it right now,
03:10 but I can click this button and even upgrade it,
03:13 notice this is now upgrades so that's pretty sweet,
03:15 it lets you manage the environment
03:17 but we don't have the things that are required there,
03:20 if I exit out and come back to my terminal
03:22 you can see now my environment is active,
03:27 I could come over here and say pip install -r requirements
03:33 notice I get auto complete, because this is my zsh shell even,
03:39 so it even remembers your previous commands and whatnot,
03:41 but I could do this, that's what I would possibly normally do
03:45 but in PyCharm, it just says, you need to run
03:48 that command I just typed, so let me just click it here,
03:51 choose what you want to do and wait a moment,
03:55 and it will download and install this.
03:59 So it installed them and ran for just a second to index those new packages
04:04 and there you go, that's all good, we can make that go away.
04:09 And now, all of our little warnings go away everything is good
04:12 so even in our data section over here where we say important MongoEngine
04:16 that works, because PyCharm saw the requirements file
04:23 and it installed it for us an indexed it and so on. So that is really cool.
04:30 So now we have this project,
04:32 we want to navigate around, it understands all the pieces.
04:35 The first thing you might be doing is like maybe we know
04:39 somewhere over here, maybe there's something called book_cage
04:44 and we know there's a method called book_cage
04:48 but is it in infrastructure, is it in services,
04:54 I can't remember where it was,
04:56 so let's suppose we're trying to find a method called book_cage.
04:59 So what we can do is, there's little search thing up here you can click,
05:03 but I never click that, what I do is I hit double shift
05:07 and this is super helpful, the first thing you see are recent files, so Mongo setup,
05:12 let me show you something that's really cool about this.
05:16 Suppose I have that part selected, I was working here
05:19 actually let me pick a bigger file there, I can scroll way down,
05:24 suppose I have line 71 to 75 selected,
05:27 close these all off and that was in the data service file
05:32 so if I do the double shift, you can see right here there is a search everywhere
05:36 it's going to remember data service.
05:39 Now, it doesn't just remember, oh you had this file open,
05:42 when I open it, it puts it exactly like it was
05:46 so if I have stuff collapsed, I'm trying to understand this at a high level
05:51 so I've collapsed most of these methods, and things like that,
05:54 and I had that selected, it would come back just like this.
06:00 This is super awesome, so this double shift open up the recent files
06:05 is actually a major way that I navigate throughout my applications
06:09 because it doesn't just remember what you recently had opened
06:14 which is really nice after you close it,
06:16 but it actually remembers the state of the files,
06:20 where you were, what you had selected,
06:22 it really takes you back to where you started.
06:25 That's great, but we were looking for something called book_cage,
06:28 so if I just type book, you can see there's some classes
06:31 there's a booking class, this is a thing we stored in MongoDB,
06:34 this is the file that contains the booking class, here it shows you just the files,
06:41 there's some symbols, and look at that, book_a_cage,
06:45 this is the guest version, this is like the low level data version,
06:49 this is how I can get the book into my cage and so on,
06:53 then there's even actions, look at that, how do I create a bookmark
06:57 or these are literally menu options in PyCharm.
07:00 Alright, it looks like book_cage that's the one I was looking for,
07:03 bam, I can navigate to it just like that.
07:06 So this search everywhere is really helpful,
07:09 it works for Python, but it also works for text files, CSVs, Javascript, you name it,
07:17 CSS, it doesn't matter so I can come over here and say Colorama,
07:25 and it will take me into there.
07:27 Notice that I can include non-project items as well
07:30 and it will look inside, it's looking inside the PIL package in Python,
07:38 so you can even search the standard library that way,
07:41 I could look for dict for example in built in, we can go straight to dict.
07:45 Now, you don't get too many details because this is just
07:48 it's implemented in C in the C Python runtime,
07:53 but at least it will give you the signatures best as it can tell.

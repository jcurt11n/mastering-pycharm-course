00:01 Notice over here I have created a debugging folder
00:03 for demos that we're doing in this chapter
00:06 and I have a program that goes across two files
00:09 you don't want to make it too complicated but not too simplistic as well.
00:13 So what we're going to run is program
00:15 and I have a run configuration for that up here
00:18 and it imports some things from math_tricks
00:20 and one of the math tricks we can do is
00:22 give me all the fibonacci numbers.
00:24 The other math trick is I can take any sequence of numbers
00:26 and turn them into odd numbers
00:28 and so if I give it the fibonacci numbers, I'll get the odd fibonacci numbers.
00:32 Now what's kind of insane is this is an infinite sequence, and so is this.
00:37 We've got to break out at some point,
00:40 we can't just loop over it or try to sum it up or something,
00:43 let's just run it and see what happens.
00:46 Okay, that looks like the fibonacci numbers except for 2 and 8 are missing
00:51 well because we only got the odd fibonacci numbers.
00:54 Our goal is to use the debugger to understand the flow of this program.
00:58 Now, how do we generate an infinite series?
01:01 Well, actually it's much simpler than you might think, here while true yield this,
01:05 so this is a co-routine, a generator function
01:09 and what it does is it just goes through the fibonacci algorithm
01:13 and uses the while true loop and the yield
01:16 and so we'll see what that means in a moment,
01:18 and then similarly, this just takes a series
01:21 and then if it's odd it will yield numbers back in that series.
01:25 So both of these, at least this top one is an infinite series
01:29 and this one is potentially infinite,
01:32 it's the somewhat shorter than what you send into it potentially
01:35 if you send in infinite numbers you might get an infinite set back.
01:40 Okay so let's go and just start by setting a breakpoint, that's pretty easy
01:46 so we'll set a breakpoint right here and hit the debug,
01:50 and immediately it runs down to this spot
01:55 and if we were over here on this page, like this
01:59 we could say show me where you are,
02:01 okay that's right, we're right here,
02:03 and you can see the call stack not super interesting
02:05 because all of this stuff down here,
02:07 this is all just Python start up -- here is our code.
02:10 We also have our variables, like we have our data here
02:13 and you can see that we have our list and it's empty for the moment
02:17 and we also have things like the various special stuff
02:21 like the __name__  is __main__ this time in the file and so on.
02:25 So, the other thing to notice that's pretty awesome
02:29 is up here right next to data, there's this and notice I can't select it
02:33 but there's this green that actually shows you what the value of data is
02:38 and you'll see that change over time,
02:40 and let's just step through for a minute,
02:44 so we step down, now we have a generator
02:46 because we're using yield which is pretty awesome
02:49 and then we're going to step down again and we have another generator
02:52 and notice how fast that was, we just got an infinite series of numbers
02:55 and it basically ran instantaneously,
02:58 and that's because we're not generating them yet until we go over them here,
03:01 so let's just step through a little bit
03:04 and notice now that o is 1, I can see that right here, that's really cool,
03:07 also you can see it down here
03:10 and we'll go and append it, notice now,
03:13 data is a list and it has the one that we just put in
03:16 we go through, do this a few times,
03:19 and now notice o changed to 3, its color here has changed
03:22 this should change color in a second when its value changes as well
03:26 now this turned orange because it's 1, 1, 3, so this is really great
03:31 and if for some reason we're coming along and say
03:34 well what would happen if o was not 13 but 9000
03:40 so we could actually come down here and say set value
03:44 maybe we'll be able to do that here as well—
03:47
03:51 no, I don't think so, we have to do it down here.
03:53 So we'll go over here and we'll say set value
03:56 and then let's just say what if it was 9000 okay
04:01 and we'll take our next step, it's 9000 and so that's bigger than this,
04:07 we'll break out and then we'll print our data, how cool is that,
04:10 over here in the console we have the ones that we got back.
04:12 So that's pretty amazing, let's do a little bit more though,
04:16 let's try to understand how this infinite series work
04:21 so we are just going to come down here and say run the cursor,
04:23 that's great, we already know that those work,
04:26 and instead of stepping over, let's step into our code
04:29 so we're going to step into here and a series itself is a generator
04:34 it actually says right there on the right, the fibonacci one up there
04:37 and we're going to step down here like this and go through this
04:43 and we could step into valuating this series
04:46 and notice, now we're over here,
04:49 so these generators have really funky behavior
04:51 they're like restartable functions, so let me just step around a little bit
04:55 notice we have 5 and 8
04:59 now if I step out, go down here, we are 5
05:05 now if I step in again, it's not going to go and rerun this function
05:07 it's going to step right here probably with the values of 8 and 13 or something
05:14 so let's step in, 8 and 5 and so you go right back
05:18 so you can use the debugger actually really well
05:21 to sort of figure out the flow, even though these things are quite odd
05:25 so let's step out a little bit, out again,
05:28 step through here right, now it's 13, now it's 21,
05:32 now we can step back into this one through here, or step back in there, right
05:38 so this is really, really great.

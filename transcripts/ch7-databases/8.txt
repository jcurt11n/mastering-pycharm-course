00:01 Let's do a quick review of the various database features
00:03 that we've seen in PyCharm,
00:05 which, really is data grip, right for the most part, except for that last one.
00:08 We started out by saying we're going to add a data source,
00:11 we went to the database little tab tool window thing
00:16 and we said hit the plus, add data source, pick SQLite serial,
00:20 once we do that, it opens up this,
00:24 you've got to make sure that there is no warning or statement
00:28 that you need to download the drivers,
00:31 because nothing will work at all from here on if you don't have those drivers.
00:35 But, once you have done that to verify that the drivers are all good,
00:39 then you can just drag that SQLite file over to the database section
00:43 and it will already know and understand it.
00:46 Once you've done that, you can expand it out
00:48 and see that the database info should all be present.
00:51 One of the first things you might want to do is
00:55 visualize the relationship between your tables in your database,
01:00 you can go to the top and right click and say
01:03 go diagrams show visualization, show visualization pop up,
01:06 whatever it is, whichever style it is that you want,
01:09 and then we also saw that you can select individual tables
01:13 and do the same thing and it will show just that subset of the tables,
01:16 so let's say we picked show pop up,
01:19 we'd see something like this, pop up next to our code,
01:22 here's a slightly more interesting diagram,
01:25 from the same database but evolved further down
01:28 into the application that we built in that course,
01:31 you can see there's an account that has a password reset
01:34 and album purchase which relates back to the album
01:37 and the account and all sorts of stuff;
01:39 so, really, really nice that we can visualize this really clearly.
01:42 Next, we want to do query data, once we know it's there
01:46 let's go and ask some questions like
01:48 what kind of data is there,
01:50 here we're saying select just the album id, id and name from the tracks
01:54 and notice that we get intellisense or autocomplete all along here,
01:59 in the select part, especially once we say from track
02:02 things get really good and we get the entire schema for the track table
02:07 and the other tables as well.
02:10 We run this and it opens down at the bottom to this main.track thing
02:14 and you can see here's all the tracks, their ids, their album ids
02:17 and these came back based on the three columns that we selected,
02:21 that's really cool, there's a bunch of stuff that we can do down here
02:25 for example, if we make changes, we need to push the db button here
02:31 to save those changes back,
02:33 right now it's grayed out because there's no changes
02:35 but if you made changes
02:37 then it would turn like green and blue or something like that.
02:39 Also over here, we saw that we can export data
02:42 we can export data modifying scripts
02:45 let's say so like insert statements,
02:48 we can create DDL which will give us the operations
02:51 to generate or recreate the table, things like that
02:54 so really, really nice, lots of features.
02:56 Sticking to that for a second, so if we focus here
02:59 and we hit sql inserts and we click on it
03:01 it depends on what was last selected,
03:03 we might have tab separated values or comma separated values
03:07 or sql inserts or whatever it was that you last selected
03:10 so these are all the different export types,
03:14 so csv is pretty common, notice there are some Javascript specific ones
03:18 or groovy, closure, I don't really do anything with those
03:22 but if that's useful to you, you can definitely work with those as well.
03:26 Now under DDL, we can say show me the data description language
03:32 to actually generate this table,
03:34 so this is the kind of stuff that I always forget
03:37 when I'm working with relational databases, this DDL stuff
03:40 and here including the schema, the types, the nullability
03:44 as well as all the indexes are generated right there, so that's quite nice.
03:49 We also saw that we can modify the existing scheme,
03:53 right click on a table and say modify
03:55 and then we can add columns, keys, indexes,
03:58 change them, delete them, all kinds of stuff.
04:00 So the final trick that we saw was
04:04 PyCharm brings us together in a really wonderful way,
04:08 so it's very common to write SQL statements
04:12 embedded in strings that you then send off
04:15 through something like db api or something like that.
04:19 So here we're going to write our SQL,
04:21 then we're going to execute the command and then loop over that.
04:24 So this is not SQLAlchemy or other ORMs, this is just raw SQL,
04:29 and PyCharm has some really nice help
04:32 so when you write it this far, it looks like
04:34 oh there's no help, it's just like, this is going to be a string
04:36 like strings would normally be.
04:39 If you type a little bit more though,
04:41 once it's really sure you have a SQL statement there
04:43 it starts to give you all sorts of cool stuff
04:45 so we have main.track, we have album_id=7,
04:49 you see there's like join and where and from
04:50 these are all known standard SQL keywords, so that's already cool,
04:55 but it takes it one step further, where it actually,
04:58 once you say the table, it actually understands the schema of that table
05:03 and gives you autocomplete list there as well.
05:06 This is super valuable if you find yourself
05:10 writing raw SQL statements inside Python.
05:12 This also works in the select field,
05:15 you kind of have got to write enough out select * from main track
05:19 and then go back and change * to something else,
05:21 sometimes select * is not a great idea
05:24 because you're getting a bunch of stuff you don't need
05:26 so if you just want like name and audio url
05:28 then you could easily do that here,
05:32 select name,audio url and it will actually give you
05:35 all that autocomplete stuff right there, which is super nice.
